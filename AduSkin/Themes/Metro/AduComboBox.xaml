<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:Adu="clr-namespace:AduSkin.Controls.Metro"
      xmlns:Converters="clr-namespace:AduSkin.Controls.Converter"
      xmlns:AduAttach="clr-namespace:AduSkin.Controls.Attach">
   <ResourceDictionary.MergedDictionaries>
      <ResourceDictionary Source="/AduSkin;component/Themes/Metro/MetroBase.xaml"/>
   </ResourceDictionary.MergedDictionaries>
   <!--下拉按钮-->
   <Style TargetType="ToggleButton" x:Key="ComboxStyleBtn">
      <Setter Property="FocusVisualStyle" Value="{x:Null}"></Setter>
      <Setter Property="Cursor" Value="Hand"></Setter>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate>
               <Border x:Name="Back" HorizontalAlignment="Right" Background="#00000000" BorderThickness="0" BorderBrush="Transparent" Height="20" Width="20">
                  <Path Name="PathFill" Width="10" Height="6" Fill="{TemplateBinding Foreground}" Stretch="Fill" Margin="0,0,6,0" Data="{StaticResource Icon_DropDowm}" />
               </Border>
               <ControlTemplate.Triggers>
                  <Trigger Property="IsMouseOver" Value="True">
                     <Setter TargetName="PathFill" Property="Opacity" Value=".5"></Setter>
                  </Trigger>
               </ControlTemplate.Triggers>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <Converters:StringIsEmptyConverter x:Key="StringIsEmptyConverter" />

   <SolidColorBrush x:Key="BorderColor" Color="#00D3D6DB" />
   <SolidColorBrush x:Key="ComboBox.BorderBrush" Color="#ABADB3" />
   <SolidColorBrush x:Key="ComboBox.Popup.BorderBrush" Color="#C8C8C8" />
   <SolidColorBrush x:Key="ComboBox.Normal.Background" Color="#FFFFFF" />
   <SolidColorBrush x:Key="ComboBox.Disabled.Foreground" Color="#888" />
   <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#00eeeeee" />
   <SolidColorBrush x:Key="ComboBox.Disabled.BorderBrush" Color="#00888888" />

   <SolidColorBrush x:Key="Light.Border.Normal" Color="#D7DDE4" />
   <SolidColorBrush x:Key="Light.Border.MouseOver" Color="#5CADFF" />
   <SolidColorBrush x:Key="Light.Border.Pressed" Color="#5CADFF" />
   <SolidColorBrush x:Key="Light.Border.Disabled" Color="#D7DDE4" />

   <SolidColorBrush x:Key="Brush.Item.MouseOver.Background" Color="#E2E2E2" />
   <SolidColorBrush x:Key="Brush.Item.Selected.Background" Color="#47A3FF" />
   <SolidColorBrush x:Key="Brush.Item.MouseOver.Foreground" Color="#000000" />
   <SolidColorBrush x:Key="Brush.Item.Selected.Foreground" Color="#FFFFFF" />

   <PathGeometry x:Key="IsSelectedIcon" Figures="M416.058904 776.794805c-10.475586 0-20.951171-3.996011-28.943193-11.989055L131.272789 508.962827c-15.985066-15.985066-15.985066-41.901319 0-57.886385s41.901319-15.985066 57.886385 0l226.898707 226.898707 418.780899-418.780899c15.985066-15.985066 41.901319-15.985066 57.886385 0s15.985066 41.901319 0 57.886385L445.002097 764.80575C437.010075 772.797771 426.53449 776.794805 416.058904 776.794805z" />
   <PathGeometry x:Key="Arrow.Down" Figures="M191.814654 383.980301 832.184323 383.980301 512 767.996418Z" />
   <PathGeometry x:Key="Arrow.Up" Figures="M832.185 640.020h-640.37l320.184-384.016z" />
   <ControlTemplate x:Key="ComboBoxToggleButtonTemplate" TargetType="{x:Type Adu:AduToggleButton}">
      <Grid Background="Transparent">
         <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="auto" />
         </Grid.ColumnDefinitions>
         <Border Grid.ColumnSpan="2" x:Name="ShadowBorder" CornerRadius="{TemplateBinding CornerRadius}" Background="Transparent" SnapsToDevicePixels="True" UseLayoutRounding="True">
            <!--<Border.Effect>
               <DropShadowEffect BlurRadius="5" Opacity="0.2" ShadowDepth="0" Color="Transparent" />
            </Border.Effect>-->
         </Border>

         <Border Name="Border" Grid.ColumnSpan="2"
                    BorderBrush="#D9D9D9"
                    BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}"
                    SnapsToDevicePixels="True" UseLayoutRounding="True" />

         <Border Name="ButtonBorder" Grid.Column="1" Margin="1, 1, 1, 1"
                    CornerRadius="{TemplateBinding CornerRadius}"
                    Padding="5,0,8,0">
            <Path Name="Arrow" Grid.Column="1" Width="10" HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Data="{StaticResource Icon_DropDowm}"
                      Fill="{TemplateBinding Foreground}"
                      RenderTransformOrigin="0.5,0.5" SnapsToDevicePixels="True" Stretch="Uniform"
                      UseLayoutRounding="True">
               <Path.RenderTransform>
                  <TransformGroup>
                     <ScaleTransform />
                     <SkewTransform />
                     <RotateTransform />
                     <TranslateTransform />
                  </TransformGroup>
               </Path.RenderTransform>
            </Path>
         </Border>

         <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="CheckStates">
               <VisualState x:Name="Checked">
                  <Storyboard>
                     <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="Arrow"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)"
                                             To="180" />
                     <!--<ColorAnimation Duration="0:0:0.2" Storyboard.TargetName="ShadowBorder"
                                            Storyboard.TargetProperty="(Border.Effect).(DropShadowEffect.Color)" To="Brown" />-->
                  </Storyboard>
               </VisualState>
               <VisualState x:Name="Unchecked">
                  <Storyboard>
                     <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="Arrow"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)"
                                             To="0" />
                     <!--<ColorAnimation Duration="0:0:0.2" Storyboard.TargetName="ShadowBorder"
                                            Storyboard.TargetProperty="(Border.Effect).(DropShadowEffect.Color)" To="Transparent" />-->
                  </Storyboard>
               </VisualState>
            </VisualStateGroup>
         </VisualStateManager.VisualStateGroups>
      </Grid>
      <ControlTemplate.Triggers>
         <Trigger Property="IsMouseOver" Value="True">
            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding BorderBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
         </Trigger>
         <MultiTrigger>
            <MultiTrigger.Conditions>
               <Condition Property="ToggleButton.IsChecked" Value="True" />
               <Condition Property="IsMouseOver" Value="False" />
            </MultiTrigger.Conditions>
            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding BorderBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
         </MultiTrigger>
         <Trigger Property="UIElement.IsEnabled" Value="False">
            <Setter TargetName="Border" Property="Panel.Background" Value="{StaticResource ComboBox.Disabled.Background}" />
            <Setter TargetName="Border" Property="Border.BorderBrush" Value="{StaticResource ComboBox.Disabled.BorderBrush}" />
            <Setter TargetName="ButtonBorder" Property="Panel.Background" Value="{StaticResource ComboBox.Disabled.Background}" />
            <Setter TargetName="ButtonBorder" Property="Border.BorderBrush" Value="{StaticResource ComboBox.Disabled.BorderBrush}" />
            <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBox.Disabled.Foreground}" />
            <Setter TargetName="Arrow" Property="Stroke" Value="#999" />
            <Setter TargetName="Arrow" Property="StrokeThickness" Value="0" />
         </Trigger>
      </ControlTemplate.Triggers>
   </ControlTemplate>


   <Style x:Key="ComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
      <Setter Property="Height" Value="30"></Setter>
      <Setter Property="MinHeight" Value="22"></Setter>
      <Setter Property="MinWidth" Value="30"></Setter>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type ComboBoxItem}">
               <Border Name="Back"  BorderThickness="0,0,0,0" Background="{TemplateBinding Background}" BorderBrush="Transparent"  Padding="10,0">
                  <ContentPresenter ContentSource="{Binding Source}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,0,0,0"></ContentPresenter>
               </Border>
               <ControlTemplate.Triggers>
                  <Trigger Property="IsEnabled" Value="False">
                     <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                  </Trigger>
                  <Trigger Property="IsMouseOver" Value="True">
                     <Setter Property="Background" Value="#10000000" />
                  </Trigger>
                  <Trigger Property="IsSelected" Value="True">
                     <Setter Property="Background" Value="#20000000" />
                  </Trigger>
               </ControlTemplate.Triggers>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <Style TargetType="{x:Type Adu:AduComboBox}">
      <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
      <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
      <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
      <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
      <Setter Property="TextElement.Foreground" Value="#FFF" />
      <Setter Property="TextElement.FontSize" Value="12" />
      <Setter Property="ToggleButtonColor" Value="#FFF" />
      <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
      <Setter Property="MinHeight" Value="20" />
      <Setter Property="BorderBrush" Value="{StaticResource Brush}" />
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="ToggleButtonColor" Value="{StaticResource Brush}" />
      <Setter Property="ComBoxItemPanelBackground" Value="#FFF" />
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItemStyle}" />
      <Setter Property="VerticalContentAlignment" Value="Center" />
      <Setter Property="Padding" Value="5,0,0,0" />
      <Setter Property="Watermark" Value="请选择..." />
      <Setter Property="CornerRadius" Value="3" />
      <Setter Property="Control.Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type Adu:AduComboBox}">
               <ControlTemplate.Resources>
                  <Storyboard x:Key="Storyboard_Open">
                     <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DropDown" Storyboard.TargetProperty="(UIElement.Opacity)">
                        <EasingDoubleKeyFrame KeyTime="0" Value="0.0" />
                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                     </DoubleAnimationUsingKeyFrames>
                     <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DropDown" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                        <EasingDoubleKeyFrame KeyTime="0" Value="0.9" />
                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                     </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                  <Storyboard x:Key="Storyboard_Close">
                     <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DropDown" Storyboard.TargetProperty="(UIElement.Opacity)">
                        <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
                     </DoubleAnimationUsingKeyFrames>
                     <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DropDown" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                        <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
                     </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
               </ControlTemplate.Resources>
               <Grid Width="{TemplateBinding Width}">
                  <Grid.ColumnDefinitions>
                     <ColumnDefinition Width="auto" />
                     <ColumnDefinition Width="*" />
                  </Grid.ColumnDefinitions>
                  <Grid Grid.Column="1">
                     <Adu:AduToggleButton x:Name="ToggleButton" ClickMode="Press" Focusable="False" CornerRadius="{TemplateBinding CornerRadius}"
                        IsChecked="{Binding Path=IsDropDownOpen,RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay}"
                        Template="{StaticResource ComboBoxToggleButtonTemplate}" Foreground="{TemplateBinding ToggleButtonColor}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                                          Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"/>
                     <ContentPresenter Name="ContentSite" Margin="5, 3, 25, 3" HorizontalAlignment="Left"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                                              ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                              IsHitTestVisible="False" />
                     <TextBlock Margin="{TemplateBinding Padding}"
                                       HorizontalAlignment="Left" 
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       FontSize="{TemplateBinding FontSize}"
                                       Opacity="0.4" IsHitTestVisible="False"
                                       Text="{TemplateBinding Watermark}">
                        <TextBlock.Style>
                           <Style TargetType="{x:Type TextBlock}">
                              <Style.Triggers>
                                 <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                       <Condition Binding="{Binding Path=Content, ElementName=ContentSite, Converter={StaticResource StringIsEmptyConverter}}" Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Visibility" Value="Visible" />
                                 </MultiDataTrigger>
                                 <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                       <Condition Binding="{Binding Path=Content, ElementName=ContentSite, Converter={StaticResource StringIsEmptyConverter}}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Visibility" Value="Collapsed" />
                                 </MultiDataTrigger>

                                 <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                       <Condition Binding="{Binding Path=Text.IsEmpty, ElementName=PART_EditableTextBox}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Visibility" Value="Collapsed" />
                                 </MultiDataTrigger>
                              </Style.Triggers>
                           </Style>
                        </TextBlock.Style>
                     </TextBlock>
                     <TextBox Name="PART_EditableTextBox" Margin="5, 3, 25, 3" HorizontalAlignment="Stretch"
                                     VerticalAlignment="Center" Background="Transparent" Focusable="True" IsReadOnly="False"
                                     Visibility="Hidden" Text="{TemplateBinding ComboBox.SelectionBoxItem}" Foreground="{TemplateBinding Foreground}">
                        <TextBox.Template>
                           <ControlTemplate TargetType="TextBox">
                              <Border x:Name="OuterBorder" Background="Transparent">
                                 <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center" />
                              </Border>
                           </ControlTemplate>
                        </TextBox.Template>
                     </TextBox>

                     <!--  Popup showing items  -->
                     <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" VerticalOffset="-1" Focusable="False" AllowsTransparency="True" PopupAnimation="Fade" >
                        <Border CornerRadius="{TemplateBinding CornerRadius}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" RenderTransformOrigin="0.5,0" Margin="20" Background="{TemplateBinding ComBoxItemPanelBackground}" MaxHeight="{TemplateBinding MaxDropDownHeight}" Padding="0,6" MinWidth="{TemplateBinding ActualWidth}" x:Name="DropDown" SnapsToDevicePixels="True">
                           <Border.RenderTransform>
                              <TransformGroup>
                                 <ScaleTransform />
                                 <SkewTransform />
                                 <RotateTransform />
                                 <TranslateTransform />
                              </TransformGroup>
                           </Border.RenderTransform>
                           <Border.Effect>
                              <DropShadowEffect Color="Black" BlurRadius="10" ShadowDepth="0" Opacity="0.1"/>
                           </Border.Effect>
                           <Adu:MetroScrollViewer Margin="0" MaxHeight="{TemplateBinding MaxDropDownHeight}" 
                                                  SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="True">
                              <!-- StackPanel 用于显示子级，方法是将 IsItemsHost 设置为 True -->
                              <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                           </Adu:MetroScrollViewer>
                        </Border>
                     </Popup>
                  </Grid>
               </Grid>
               <ControlTemplate.Triggers>
                  <Trigger SourceName="ToggleButton" Property="IsChecked" Value="True">
                     <Trigger.ExitActions>
                        <StopStoryboard BeginStoryboardName="Storyboard_Open_BeginStoryboard" />
                     </Trigger.ExitActions>
                     <Trigger.EnterActions>
                        <BeginStoryboard x:Name="Storyboard_Open_BeginStoryboard" Storyboard="{StaticResource Storyboard_Open}" />
                     </Trigger.EnterActions>
                  </Trigger>
                  <Trigger SourceName="ToggleButton" Property="IsChecked" Value="False">
                     <Trigger.ExitActions>
                        <StopStoryboard BeginStoryboardName="Storyboard_Close_BeginStoryboard" />
                     </Trigger.ExitActions>
                     <Trigger.EnterActions>
                        <BeginStoryboard x:Name="Storyboard_Close_BeginStoryboard" Storyboard="{StaticResource Storyboard_Close}" />
                     </Trigger.EnterActions>
                  </Trigger>
                  <!--<Trigger Property="ItemsControl.HasItems" Value="False">
                     <Setter TargetName="DropDownBorder" Property="FrameworkElement.MinHeight" Value="100" />
                  </Trigger>-->
                  <Trigger Property="UIElement.IsEnabled" Value="False">
                     <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBox.Disabled.Foreground}" />
                     <Setter TargetName="PART_EditableTextBox" Property="Foreground" Value="{StaticResource ComboBox.Disabled.Foreground}" />
                  </Trigger>
                  <Trigger Property="ItemsControl.IsGrouping" Value="True">
                     <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                  </Trigger>
                  <Trigger Property="ComboBox.IsEditable" Value="True">
                     <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
                     <Setter TargetName="PART_EditableTextBox" Property="UIElement.Visibility" Value="Visible" />
                     <Setter TargetName="ContentSite" Property="UIElement.Visibility" Value="Hidden" />
                  </Trigger>
                  <Trigger Property="Validation.HasError" Value="True">
                     <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                  </Trigger>
               </ControlTemplate.Triggers>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

</ResourceDictionary>